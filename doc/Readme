This compiler is a simple Typechecker and LLVM code generator for the Javalette language.

It outputs an error message if the program is wrong in terms types, if the program is right, it outputs OK.
Error messages are specified in typechecker with their causes.

We used grammar file Javalette and additional grammar rules for array extension. It has 2 shift reduce conflicts: Firstly standard dangling if/else shift-reduce conflict and secondly, a conflict between EVar. ::= Ident and EArrayPtr. ::= Ident "[" Expr "]", which seems reasonable.

It generates .ll files in the same directory with inputs which are files with .jl extension.

Compiler does not have any options.

---USAGE----

---Make File----

When inside of src directory,"make" command compiles all the java files and generate .class files. Also runtime.ll gets compiled and runtime.bc is generated inside lib folder. "make clean" command removes all the files that are generated by "make" command. 

Also make has dependencies to CUP and JLex. These two must be set up and usable in path. For another option you can just download CUP and JLex and put inside src. You can find information about them at BNFC official website.

In case of src/Javalette is deleted, "make bnfc" creates the parser. But BNFC must be set beforehand and should be usable in path variable. Or you can just download BNFC and put it inside src. But since src/Javalette is already given you will not need to do "make bnfc". You just need CUP and JLex.

---Compiling and Running----

Example of how to run the compiler and get an executable:

0. Create a Javalette file inside src directory,
write your program.         				// filename.jl

1. ./java jlc filename.jl				// Produces filename.ll

2. llvm-as filename.ll 					// Produces filename.bc	
				
3. llvm-link filename.bc ../lib/runtime.bc -o main.bc	// Produces "main.bc"

4. llc -filetype=obj main.bc 				// Produces main.o

5. gcc main.o						// Produces a.out which is an executable

6. ./a.out						// Runs the executable

Atakan Serin - Bekim Rabushaj
